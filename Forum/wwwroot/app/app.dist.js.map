{"version":3,"sources":["app.js","register/register.module.js","threads/threads.module.js","register/api-register.js","register/register.component.js","threads/api-threads.js","threads/new-thread.component.js","threads/thread.component.js","threads/threads.component.js"],"names":["app","angular","module","config","routeConfig","$inject","$stateProvider","name","url","component","forEach","state","factory","$http","service","post","user","registerComponent","controller","registerController","controllerAs","templateUrl","$log","$stateParams","apiRegister","console","log","this","registerUser","info","then","success","$onInit","threads","get","newThread","thread","id","posts","threadId","newPost","newThreadComponent","newThreadController","$state","apiThreads","createThread","go","data","threadComponent","threadController","vm","showReply","postReply","reply","showPostReply","postId","push","getThread","length","concat","title","threadsComponent","threadsController"],"mappings":"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","file":"app.dist.js","sourcesContent":["var app = angular.module('app', [\r\n    'ui.router',\r\n    'threads',\r\n    'register'\r\n]);\r\n","(function () {\r\n    'use strict';\r\n    angular\r\n        .module('register', [])\r\n        .config(routeConfig);\r\n\r\n    routeConfig.$inject = ['$stateProvider'];\r\n\r\n    function routeConfig($stateProvider) {\r\n        var states = [\r\n            {\r\n                name: 'register',\r\n                url: '/register',\r\n                component: 'registerComponent'\r\n            }\r\n        ];\r\n\r\n        states.forEach((state) => {\r\n            $stateProvider.state(state);\r\n        });\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n    angular\r\n        .module('threads', [])\r\n        .config(routeConfig);\r\n\r\n    routeConfig.$inject = ['$stateProvider'];\r\n\r\n    function routeConfig($stateProvider) {\r\n        var states = [\r\n            {\r\n                name: 'threads',\r\n                url: '/threads',\r\n                component: 'threadsComponent'\r\n            },\r\n            {\r\n                name: 'thread',\r\n                url: '/threads/{id}/{title}',\r\n                component: 'threadComponent'\r\n            },\r\n            {\r\n                name: 'newThread',\r\n                url: '/threads/new-thread',\r\n                component: 'newThreadComponent'\r\n            }\r\n        ];\r\n\r\n        states.forEach((state) => {\r\n            $stateProvider.state(state);\r\n        });\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('register')\r\n        .factory('apiRegister', factory);\r\n\r\n    factory.$inject = ['$http'];\r\n\r\n    function factory($http) {\r\n\r\n        var service = {\r\n            post: postUser\r\n        };\r\n\r\n        var url = 'api/users';\r\n\r\n        function postUser(user) {\r\n            return $http.post(url, user);\r\n        }\r\n\r\n        return service;\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    var registerComponent = {\r\n        controller: registerController,\r\n        controllerAs: 'vm',\r\n        templateUrl: 'app/register/register.html'\r\n    };\r\n\r\n    angular\r\n        .module('register')\r\n        .component('registerComponent', registerComponent);\r\n\r\n    registerController.$inject = [\r\n        '$log',\r\n        '$stateParams',\r\n        'apiRegister'\r\n    ];\r\n\r\n    function registerController($log, $stateParams, apiRegister) {\r\n        var vm = this;\r\n\r\n        console.log('piru');\r\n\r\n        vm.registerUser = registerUser;\r\n\r\n        function registerUser(user) {\r\n            $log.info('wowowwo');\r\n            apiRegister\r\n                .post(user)\r\n                .then((success) => {\r\n                    $log.info('wow');\r\n                });\r\n        }\r\n\r\n        function activate() {\r\n            console.log('active');\r\n        }\r\n\r\n        this.$onInit = activate;\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('threads')\r\n        .factory('apiThreads', factory);\r\n\r\n    factory.$inject = ['$http'];\r\n\r\n    function factory($http) {\r\n\r\n        var service = {\r\n            threads: {\r\n                get: getThreads,\r\n                post: postThread\r\n            },\r\n            thread: {\r\n                get: getThread\r\n            },\r\n            posts: {\r\n                get: getPosts,\r\n                post: postPost\r\n            },\r\n            post: {\r\n                get: getPost\r\n            }\r\n        };\r\n\r\n        var url = 'api/threads';\r\n\r\n        function getThreads() {\r\n            return $http.get(url);\r\n        }\r\n\r\n        function postThread(newThread) {\r\n            return $http.post(url, newThread);\r\n        }\r\n\r\n        function getThread(id) {\r\n            return $http.get(url + '/' + id);\r\n        }\r\n\r\n        function getPosts(threadId) {\r\n            return $http.get(url + '/' + threadId + '/posts');\r\n        }\r\n\r\n        function postPost(newPost) {\r\n            return $http.post(url + '/' + newPost.threadId + '/posts', newPost);\r\n        }\r\n\r\n        function getPost(id) {\r\n            return $http.get(url + '/posts/' + id);\r\n        }\r\n\r\n        return service;\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    var newThreadComponent = {\r\n        controller: newThreadController,\r\n        controllerAs: 'vm',\r\n        templateUrl: 'app/threads/new-thread.html'\r\n    };\r\n\r\n    angular\r\n        .module('threads')\r\n        .component('newThreadComponent', newThreadComponent);\r\n\r\n    newThreadController.$inject = [\r\n        '$log',\r\n        '$state',\r\n        '$stateParams',\r\n        'apiThreads'\r\n    ];\r\n\r\n    function newThreadController($log, $state, $stateParams, apiThreads) {\r\n        var vm = this;\r\n\r\n        vm.createThread = createThread;\r\n\r\n        function createThread(newThread) {\r\n            apiThreads\r\n                .threads\r\n                .post(newThread)\r\n                .then((success) => {\r\n                    $state.go('thread', { id: success.data });\r\n                });\r\n        }\r\n\r\n        function activate() {\r\n        }\r\n\r\n        this.$onInit = activate;\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    var threadComponent = {\r\n        controller: threadController,\r\n        controllerAs: 'vm',\r\n        templateUrl: 'app/threads/thread.html'\r\n    };\r\n\r\n    angular\r\n        .module('threads')\r\n        .component('threadComponent', threadComponent);\r\n\r\n    threadController.$inject = [\r\n        '$log',\r\n        '$stateParams',\r\n        'apiThreads'\r\n    ];\r\n\r\n    function threadController($log, $stateParams, apiThreads) {\r\n        var vm = this;\r\n\r\n        vm.posts = [];\r\n\r\n        vm.showReply = false;\r\n\r\n        vm.postReply = postReply;\r\n\r\n        function postReply(reply, threadId) {\r\n            reply.threadId = threadId;\r\n            apiThreads\r\n                .posts\r\n                .post(reply)\r\n                .then((success) => {\r\n                    vm.showPostReply = false;\r\n                    vm.reply = null;\r\n                    getPost(success.data);\r\n                });\r\n        }\r\n\r\n        function getThread(threadId) {\r\n            apiThreads\r\n                .thread\r\n                .get(threadId)\r\n                .then((success) => {\r\n                    vm.posts.push(success.data);\r\n                    getPosts(threadId);\r\n                });\r\n        }\r\n\r\n        function getPosts(threadId) {\r\n            apiThreads\r\n                .posts\r\n                .get(threadId)\r\n                .then((success) => {\r\n                    if (success.data.length) {\r\n                        vm.posts = vm.posts.concat(success.data);\r\n                    }\r\n                });\r\n        }\r\n\r\n        function getPost(postId) {\r\n            apiThreads\r\n                .post\r\n                .get(postId)\r\n                .then((success) => {\r\n                    vm.posts.push(success.data);\r\n                });\r\n        }\r\n\r\n        function activate() {\r\n            vm.title = $stateParams.title;\r\n            vm.threadId = $stateParams.id;\r\n            getThread(vm.threadId);\r\n        }\r\n\r\n        this.$onInit = activate;\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    var threadsComponent = {\r\n        controller: threadsController,\r\n        controllerAs: 'vm',\r\n        templateUrl: 'app/threads/threads.html'\r\n    };\r\n\r\n    angular\r\n        .module('threads')\r\n        .component('threadsComponent', threadsComponent);\r\n\r\n    threadsController.$inject = [\r\n        '$log',\r\n        '$stateParams',\r\n        'apiThreads'\r\n    ];\r\n\r\n    function threadsController($log, $stateParams, apiThreads) {\r\n        var vm = this;\r\n\r\n        function getThreads() {\r\n            apiThreads\r\n                .threads\r\n                .get()\r\n                .then((success) => {\r\n                    vm.threads = success.data;\r\n                });\r\n        }\r\n\r\n        function activate() {\r\n            getThreads();\r\n        }\r\n\r\n        this.$onInit = activate;\r\n    }\r\n})();\r\n"]}